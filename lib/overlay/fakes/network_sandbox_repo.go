// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/cloudfoundry-incubator/ducati-cni-plugins/lib/overlay"
)

type NetworkSandboxRepo struct {
	FindStub        func(vni int) (overlay.NetworkSandbox, error)
	findMutex       sync.RWMutex
	findArgsForCall []struct {
		vni int
	}
	findReturns struct {
		result1 overlay.NetworkSandbox
		result2 error
	}
	CreateStub        func(vni int, gateway net.IP) (overlay.NetworkSandbox, error)
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		vni     int
		gateway net.IP
	}
	createReturns struct {
		result1 overlay.NetworkSandbox
		result2 error
	}
}

func (fake *NetworkSandboxRepo) Find(vni int) (overlay.NetworkSandbox, error) {
	fake.findMutex.Lock()
	fake.findArgsForCall = append(fake.findArgsForCall, struct {
		vni int
	}{vni})
	fake.findMutex.Unlock()
	if fake.FindStub != nil {
		return fake.FindStub(vni)
	} else {
		return fake.findReturns.result1, fake.findReturns.result2
	}
}

func (fake *NetworkSandboxRepo) FindCallCount() int {
	fake.findMutex.RLock()
	defer fake.findMutex.RUnlock()
	return len(fake.findArgsForCall)
}

func (fake *NetworkSandboxRepo) FindArgsForCall(i int) int {
	fake.findMutex.RLock()
	defer fake.findMutex.RUnlock()
	return fake.findArgsForCall[i].vni
}

func (fake *NetworkSandboxRepo) FindReturns(result1 overlay.NetworkSandbox, result2 error) {
	fake.FindStub = nil
	fake.findReturns = struct {
		result1 overlay.NetworkSandbox
		result2 error
	}{result1, result2}
}

func (fake *NetworkSandboxRepo) Create(vni int, gateway net.IP) (overlay.NetworkSandbox, error) {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		vni     int
		gateway net.IP
	}{vni, gateway})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(vni, gateway)
	} else {
		return fake.createReturns.result1, fake.createReturns.result2
	}
}

func (fake *NetworkSandboxRepo) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *NetworkSandboxRepo) CreateArgsForCall(i int) (int, net.IP) {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].vni, fake.createArgsForCall[i].gateway
}

func (fake *NetworkSandboxRepo) CreateReturns(result1 overlay.NetworkSandbox, result2 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 overlay.NetworkSandbox
		result2 error
	}{result1, result2}
}

var _ overlay.NetworkSandboxRepo = new(NetworkSandboxRepo)
