// This file was generated by counterfeiter
package fakes

import (
	"os"
	"sync"

	"github.com/appc/cni/pkg/types"
	"github.com/cloudfoundry-incubator/ducati-cni-plugins/lib/overlay"
)

type NetworkSandbox struct {
	AddContainerStub        func(netns *os.File, ifName string, ipamResult *types.Result) error
	addContainerMutex       sync.RWMutex
	addContainerArgsForCall []struct {
		netns      *os.File
		ifName     string
		ipamResult *types.Result
	}
	addContainerReturns struct {
		result1 error
	}
}

func (fake *NetworkSandbox) AddContainer(netns *os.File, ifName string, ipamResult *types.Result) error {
	fake.addContainerMutex.Lock()
	fake.addContainerArgsForCall = append(fake.addContainerArgsForCall, struct {
		netns      *os.File
		ifName     string
		ipamResult *types.Result
	}{netns, ifName, ipamResult})
	fake.addContainerMutex.Unlock()
	if fake.AddContainerStub != nil {
		return fake.AddContainerStub(netns, ifName, ipamResult)
	} else {
		return fake.addContainerReturns.result1
	}
}

func (fake *NetworkSandbox) AddContainerCallCount() int {
	fake.addContainerMutex.RLock()
	defer fake.addContainerMutex.RUnlock()
	return len(fake.addContainerArgsForCall)
}

func (fake *NetworkSandbox) AddContainerArgsForCall(i int) (*os.File, string, *types.Result) {
	fake.addContainerMutex.RLock()
	defer fake.addContainerMutex.RUnlock()
	return fake.addContainerArgsForCall[i].netns, fake.addContainerArgsForCall[i].ifName, fake.addContainerArgsForCall[i].ipamResult
}

func (fake *NetworkSandbox) AddContainerReturns(result1 error) {
	fake.AddContainerStub = nil
	fake.addContainerReturns = struct {
		result1 error
	}{result1}
}

var _ overlay.NetworkSandbox = new(NetworkSandbox)
